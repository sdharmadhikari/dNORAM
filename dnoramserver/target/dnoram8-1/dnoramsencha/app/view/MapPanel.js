/*
 * File: app/view/MapPanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MapPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.mapPanel',

    config: {
        title: 'Task Location',
        fullscreen: true,
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'map',
                itemId: 'googlemap',
                mapOptions: {
                    zoom: 16
                }
            }
        ],
        listeners: [
            {
                fn: 'onMymapMaprender',
                event: 'maprender',
                delegate: '#googlemap'
            }
        ]
    },

    onMymapMaprender: function(map, gmap, options) {
        console.log("called onMymaprender");
        geocoder = new google.maps.Geocoder();
        console.log("address:"+this.address);
        if(this.address === undefined) {
            var mainController = MyApp.app.getController('MainController');

            mainController.getGeoLocation2( function(position) {
                var pos = new google.maps.LatLng(position.coords.latitude,
                    position.coords.longitude);
                gmap.setCenter(pos);
                new google.maps.Marker({
                    position: pos,
                    map: gmap
                });         
            });


        } else {
            geocoder.geocode( {'address': this.address}, function(results, status) {
            if(status == google.maps.GeocoderStatus.OK) {
                gmap.setCenter(results[0].geometry.location);
                new google.maps.Marker({
                    position: results[0].geometry.location,
                    map: gmap
                });
            } else {
                alert('Could not find :'+this.address +" on map");
            }

        });    
    }
    }

});