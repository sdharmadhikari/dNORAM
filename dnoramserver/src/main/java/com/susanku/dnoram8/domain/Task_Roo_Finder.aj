// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.susanku.dnoram8.domain;

import com.susanku.dnoram8.domain.Duser;
import com.susanku.dnoram8.domain.Task;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Task_Roo_Finder {
    
    public static TypedQuery<Task> Task.findTasksByDuser_idAndIsCompletedNot(Duser duser_id, Boolean isCompleted) {
        if (duser_id == null) throw new IllegalArgumentException("The duser_id argument is required");
        if (isCompleted == null) throw new IllegalArgumentException("The isCompleted argument is required");
        EntityManager em = Task.entityManager();
        TypedQuery<Task> q = em.createQuery("SELECT o FROM Task AS o WHERE o.duser_id = :duser_id AND o.isCompleted IS NOT :isCompleted", Task.class);
        q.setParameter("duser_id", duser_id);
        q.setParameter("isCompleted", isCompleted);
        return q;
    }
    
    public static TypedQuery<Task> Task.findTasksByIdEquals(String id) {
        if (id == null || id.length() == 0) throw new IllegalArgumentException("The id argument is required");
        EntityManager em = Task.entityManager();
        TypedQuery<Task> q = em.createQuery("SELECT o FROM Task AS o WHERE o.id = :id", Task.class);
        q.setParameter("id", id);
        return q;
    }
    
}
